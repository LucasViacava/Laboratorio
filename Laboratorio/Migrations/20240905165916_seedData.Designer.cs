// <auto-generated />
using System;
using Laboratorio.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Laboratorio.Migrations
{
    [DbContext(typeof(RestauranteContext))]
    [Migration("20240905165916_seedData")]
    partial class seedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Laboratorio.Entities.Comanda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("FechaCreacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("MenuItemId")
                        .HasColumnType("int");

                    b.Property<string>("Pedido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PedidoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MenuItemId");

                    b.ToTable("Comandas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cantidad = 1,
                            Estado = "En Preparación",
                            FechaCreacion = new DateTimeOffset(new DateTime(2024, 9, 5, 13, 59, 15, 800, DateTimeKind.Unspecified).AddTicks(7233), new TimeSpan(0, -3, 0, 0, 0)),
                            MenuItemId = 1,
                            Pedido = "",
                            PedidoId = 1
                        },
                        new
                        {
                            Id = 2,
                            Cantidad = 2,
                            Estado = "En Preparación",
                            FechaCreacion = new DateTimeOffset(new DateTime(2024, 9, 5, 13, 59, 15, 800, DateTimeKind.Unspecified).AddTicks(7253), new TimeSpan(0, -3, 0, 0, 0)),
                            MenuItemId = 2,
                            Pedido = "",
                            PedidoId = 1
                        },
                        new
                        {
                            Id = 3,
                            Cantidad = 1,
                            Estado = "En Preparación",
                            FechaCreacion = new DateTimeOffset(new DateTime(2024, 9, 5, 13, 59, 15, 800, DateTimeKind.Unspecified).AddTicks(7255), new TimeSpan(0, -3, 0, 0, 0)),
                            MenuItemId = 3,
                            Pedido = "",
                            PedidoId = 1
                        },
                        new
                        {
                            Id = 4,
                            Cantidad = 1,
                            Estado = "En Preparación",
                            FechaCreacion = new DateTimeOffset(new DateTime(2024, 9, 5, 13, 59, 15, 800, DateTimeKind.Unspecified).AddTicks(7258), new TimeSpan(0, -3, 0, 0, 0)),
                            MenuItemId = 4,
                            Pedido = "",
                            PedidoId = 1
                        });
                });

            modelBuilder.Entity("Laboratorio.Entities.Empleado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Categoria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaContratacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTimeOffset>("FechaCreacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RolId")
                        .HasColumnType("int");

                    b.Property<decimal>("Salario")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Ubicacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RolId");

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("Laboratorio.Entities.MenuItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Categoria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("FechaCreacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("MenuItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FechaCreacion = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Nombre = "Milanesa a Caballo",
                            Precio = 800m
                        },
                        new
                        {
                            Id = 2,
                            FechaCreacion = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Nombre = "Hamburguesa de Garbanzo",
                            Precio = 500m
                        },
                        new
                        {
                            Id = 3,
                            FechaCreacion = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Nombre = "Corona",
                            Precio = 200m
                        },
                        new
                        {
                            Id = 4,
                            FechaCreacion = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Nombre = "Daikiri",
                            Precio = 300m
                        });
                });

            modelBuilder.Entity("Laboratorio.Entities.Mesa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Capacidad")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("FechaCreacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("Ubicacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Mesas");
                });

            modelBuilder.Entity("Laboratorio.Entities.Orden", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("EmpleadoId")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("FechaCreacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("FechaOrden")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("MesaId")
                        .HasColumnType("int");

                    b.Property<decimal>("MontoTotal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("EmpleadoId");

                    b.HasIndex("MesaId");

                    b.ToTable("Ordenes");
                });

            modelBuilder.Entity("Laboratorio.Entities.OrdenItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("FechaCreacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("MenuItemId")
                        .HasColumnType("int");

                    b.Property<int?>("OrdenId")
                        .HasColumnType("int");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("MenuItemId");

                    b.HasIndex("OrdenId");

                    b.ToTable("OrdenItems");
                });

            modelBuilder.Entity("Laboratorio.Entities.Pago", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTimeOffset>("FechaCreacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("FechaPago")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Metodo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("OrdenId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrdenId");

                    b.ToTable("Pagos");
                });

            modelBuilder.Entity("Laboratorio.Entities.Reserva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTimeOffset>("FechaCreacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("FechaReserva")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("MesaId")
                        .HasColumnType("int");

                    b.Property<string>("NombreCliente")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MesaId");

                    b.ToTable("Reservas");
                });

            modelBuilder.Entity("Laboratorio.Entities.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Laboratorio.Entities.Comanda", b =>
                {
                    b.HasOne("Laboratorio.Entities.MenuItem", "MenuItem")
                        .WithMany()
                        .HasForeignKey("MenuItemId");

                    b.Navigation("MenuItem");
                });

            modelBuilder.Entity("Laboratorio.Entities.Empleado", b =>
                {
                    b.HasOne("Laboratorio.Entities.Rol", "Rol")
                        .WithMany()
                        .HasForeignKey("RolId");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("Laboratorio.Entities.Orden", b =>
                {
                    b.HasOne("Laboratorio.Entities.Empleado", "Empleado")
                        .WithMany()
                        .HasForeignKey("EmpleadoId");

                    b.HasOne("Laboratorio.Entities.Mesa", "Mesa")
                        .WithMany()
                        .HasForeignKey("MesaId");

                    b.Navigation("Empleado");

                    b.Navigation("Mesa");
                });

            modelBuilder.Entity("Laboratorio.Entities.OrdenItem", b =>
                {
                    b.HasOne("Laboratorio.Entities.MenuItem", "MenuItem")
                        .WithMany()
                        .HasForeignKey("MenuItemId");

                    b.HasOne("Laboratorio.Entities.Orden", "Orden")
                        .WithMany()
                        .HasForeignKey("OrdenId");

                    b.Navigation("MenuItem");

                    b.Navigation("Orden");
                });

            modelBuilder.Entity("Laboratorio.Entities.Pago", b =>
                {
                    b.HasOne("Laboratorio.Entities.Orden", "Orden")
                        .WithMany()
                        .HasForeignKey("OrdenId");

                    b.Navigation("Orden");
                });

            modelBuilder.Entity("Laboratorio.Entities.Reserva", b =>
                {
                    b.HasOne("Laboratorio.Entities.Mesa", "Mesa")
                        .WithMany()
                        .HasForeignKey("MesaId");

                    b.Navigation("Mesa");
                });
#pragma warning restore 612, 618
        }
    }
}
